compilation_unit(
  namespace_member_declaration(type_declaration(class_declaration(
        'class',
        identifier('A'),
        '{',
        member_declaration(static_constructor_declaration(
            static_constructor_modifiers('static'),
            identifier('A'),
            '(',
            ')',
            body(block(
                '{',
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(
                          expression(identifier('System')),
                          '.',
                          identifier('Console')
                        ),
                        '.',
                        identifier('WriteLine')
                      ),
                      '(',
                      argument_list(argument(expression(literal('"A"')))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('M')),
                        '.',
                        identifier('a_run')
                      ),
                      assignment_operator('='),
                      expression(literal('true'))
                    ),
                    ';'
                  )),
                '}'
              ))
          )),
        member_declaration(method_declaration(
            'modifier'('public'),
            'modifier'('static'),
            'type'('void'),
            identifier('f'),
            '(',
            ')',
            body(block(
                '{',
                '}'
              ))
          )),
        '}'
      ))),
  namespace_member_declaration(type_declaration(class_declaration(
        'class',
        identifier('B'),
        '{',
        member_declaration(static_constructor_declaration(
            static_constructor_modifiers('static'),
            identifier('B'),
            '(',
            ')',
            body(block(
                '{',
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(
                          expression(identifier('System')),
                          '.',
                          identifier('Console')
                        ),
                        '.',
                        identifier('WriteLine')
                      ),
                      '(',
                      argument_list(argument(expression(literal('"B"')))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('A')),
                        '.',
                        identifier('f')
                      ),
                      '(',
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('M')),
                        '.',
                        identifier('b_run')
                      ),
                      assignment_operator('='),
                      expression(literal('true'))
                    ),
                    ';'
                  )),
                '}'
              ))
          )),
        member_declaration(method_declaration(
            'modifier'('public'),
            'modifier'('static'),
            'type'('void'),
            identifier('f'),
            '(',
            ')',
            body(block(
                '{',
                '}'
              ))
          )),
        '}'
      ))),
  namespace_member_declaration(type_declaration(class_declaration(
        'class',
        identifier('M'),
        '{',
        member_declaration(field_declaration(
            'modifier'('public'),
            'modifier'('static'),
            type('predefined_type'('bool')),
            variable_declarators(variable_declarator(
                identifier('b_run'),
                '=',
                variable_initializer(expression(literal('false')))
              )),
            ';'
          )),
        member_declaration(field_declaration(
            'modifier'('public'),
            'modifier'('static'),
            type('predefined_type'('bool')),
            variable_declarators(variable_declarator(
                identifier('a_run'),
                '=',
                variable_initializer(expression(literal('false')))
              )),
            ';'
          )),
        member_declaration(method_declaration(
            'modifier'('public'),
            'modifier'('static'),
            type(predefined_type(integral_type('int'))),
            identifier('Main'),
            '(',
            ')',
            body(block(
                '{',
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('B')),
                        '.',
                        identifier('f')
                      ),
                      '(',
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    'if',
                    '(',
                    expression(
                      'unary_operator'('!'),
                      expression(identifier('a_run'))
                    ),
                    ')',
                    embedded_statement(
                      'return',
                      expression(literal('1')),
                      ';'
                    )
                  )),
                statement(embedded_statement(
                    'if',
                    '(',
                    expression(
                      'unary_operator'('!'),
                      expression(identifier('b_run'))
                    ),
                    ')',
                    embedded_statement(
                      'return',
                      expression(literal('2')),
                      ';'
                    )
                  )),
                statement(embedded_statement(
                    'return',
                    expression(literal('0')),
                    ';'
                  )),
                '}'
              ))
          )),
        '}'
      )))
)