compilation_unit(namespace_member_declaration(type_declaration(class_declaration(
        'modifier'('public'),
        'class',
        identifier('TestOperators'),
        '{',
        member_declaration(method_declaration(
            'modifier'('public'),
            'modifier'('static'),
            'type'('void'),
            identifier('Main'),
            '(',
            ')',
            body(block(
                '{',
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('ComplexInteger'))),
                      variable_declarator(
                        identifier('SuperInteger'),
                        '=',
                        variable_initializer(expression(
                            'new',
                            type(qualified_identifier(identifier('ComplexInteger'))),
                            '(',
                            argument_list(
                              argument(expression(literal('2'))),
                              ',',
                              argument(expression(literal('3')))
                            ),
                            ')'
                          ))
                      )
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('SuperInteger'))),
                      variable_declarator(
                        identifier('sum'),
                        '=',
                        variable_initializer(expression(
                            'expression'(
                              '(',
                              expression(identifier('SuperInteger')),
                              ')'
                            ),
                            'binary_operator'('overloadable_binary_operator'('-')),
                            expression(identifier('SuperInteger'))
                          ))
                      )
                    ),
                    ';'
                  )),
                '}'
              ))
          )),
        '}'
      ))))