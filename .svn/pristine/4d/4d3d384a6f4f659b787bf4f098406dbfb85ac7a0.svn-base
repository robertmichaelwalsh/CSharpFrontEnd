compilation_unit(
  using_directive(
    'using',
    identifier('System'),
    ';'
  ),
  namespace_member_declaration(type_declaration(class_declaration(
        'modifier'('public'),
        'class',
        identifier('T'),
        '{',
        member_declaration(method_declaration(
            'modifier'('static'),
            'modifier'('public'),
            'type'('void'),
            identifier('method'),
            '(',
            formal_parameter_list(
              fixed_parameter(
                type(predefined_type(integral_type('int'))),
                identifier('nargs')
              ),
              ',',
              fixed_parameter(
                type('predefined_type'('string')),
                identifier('arg')
              )
            ),
            ')',
            body(block(
                '{',
                statement(declaration_statement(
                    local_variable_declaration(
                      type(predefined_type(integral_type('int'))),
                      variable_declarator(identifier('i'))
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('Console')),
                        '.',
                        identifier('WriteLine')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(literal('"Got single arg "')),
                            'binary_operator'('overloadable_binary_operator'('+')),
                            expression(identifier('arg'))
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                '}'
              ))
          )),
        member_declaration(method_declaration(
            'modifier'('static'),
            'modifier'('public'),
            'type'('void'),
            identifier('method'),
            '(',
            formal_parameter_list(
              fixed_parameter(
                type(predefined_type(integral_type('int'))),
                identifier('nargs')
              ),
              ',',
              parameter_array(
                'params',
                array_type(
                  type('predefined_type'('string')),
                  rank_specifier(
                    '[',
                    ']'
                  )
                ),
                identifier('args')
              )
            ),
            ')',
            body(block(
                '{',
                statement(declaration_statement(
                    local_variable_declaration(
                      type(predefined_type(integral_type('int'))),
                      variable_declarator(identifier('i'))
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('Console')),
                        '.',
                        identifier('Write')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(
                              expression(literal('"Got "')),
                              'binary_operator'('overloadable_binary_operator'('+')),
                              expression(
                                expression(
                                  expression(identifier('nargs')),
                                  '.',
                                  identifier('ToString')
                                ),
                                '(',
                                ')'
                              )
                            ),
                            'binary_operator'('overloadable_binary_operator'('+')),
                            expression(literal('" args "'))
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('Console')),
                        '.',
                        identifier('WriteLine')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(
                              expression(literal('"("')),
                              'binary_operator'('overloadable_binary_operator'('+')),
                              expression(
                                expression(
                                  expression(
                                    expression(identifier('args')),
                                    '.',
                                    identifier('Length')
                                  ),
                                  '.',
                                  identifier('ToString')
                                ),
                                '(',
                                ')'
                              )
                            ),
                            'binary_operator'('overloadable_binary_operator'('+')),
                            expression(literal('"):"'))
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    'for',
                    '(',
                    for_initializer(expression(
                        expression(identifier('i')),
                        assignment_operator('='),
                        expression(literal('0'))
                      )),
                    ';',
                    expression(
                      expression(identifier('i')),
                      'binary_operator'('overloadable_binary_operator'('<')),
                      expression(identifier('nargs'))
                    ),
                    ';',
                    'expression'(
                      'unary_assignment_operator'('++'),
                      expression(identifier('i'))
                    ),
                    ')',
                    embedded_statement(
                      expression(
                        expression(
                          expression(identifier('Console')),
                          '.',
                          identifier('WriteLine')
                        ),
                        '(',
                        argument_list(argument(expression(
                              expression(identifier('args')),
                              '[',
                              expression_list(expression(identifier('i'))),
                              ']'
                            ))),
                        ')'
                      ),
                      ';'
                    )
                  )),
                '}'
              ))
          )),
        member_declaration(method_declaration(
            'modifier'('public'),
            'modifier'('static'),
            type(predefined_type(integral_type('int'))),
            identifier('Main'),
            '(',
            ')',
            body(block(
                '{',
                statement(embedded_statement(
                    expression(
                      expression(identifier('method')),
                      '(',
                      argument_list(
                        argument(expression(literal('1'))),
                        ',',
                        argument(expression(literal('"hello"')))
                      ),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(identifier('method')),
                      '(',
                      argument_list(
                        argument(expression(literal('2'))),
                        ',',
                        argument(expression(literal('"hello"'))),
                        ',',
                        argument(expression(literal('"World"')))
                      ),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(identifier('method')),
                      '(',
                      argument_list(
                        argument(expression(literal('3'))),
                        ',',
                        argument(expression(literal('"hello"'))),
                        ',',
                        argument(expression(literal('"World"'))),
                        ',',
                        argument(expression(literal('"blah"')))
                      ),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    'return',
                    expression(literal('0')),
                    ';'
                  )),
                '}'
              ))
          )),
        '}'
      )))
)