compilation_unit(namespace_member_declaration(type_declaration(class_declaration(
        'modifier'('public'),
        'class',
        identifier('TestJit'),
        '{',
        member_declaration(method_declaration(
            'modifier'('public'),
            'modifier'('static'),
            type(predefined_type(integral_type('int'))),
            identifier('Main'),
            '(',
            ')',
            body(block(
                '{',
                statement(declaration_statement(
                    local_variable_declaration(
                      type(predefined_type(integral_type('long'))),
                      variable_declarator(
                        identifier('ticks'),
                        '=',
                        variable_initializer(expression(literal('631502475130080000L')))
                      )
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(predefined_type(integral_type('long'))),
                      variable_declarator(
                        identifier('ticksperday'),
                        '=',
                        variable_initializer(expression(literal('864000000000L')))
                      )
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type('predefined_type'('double')),
                      variable_declarator(
                        identifier('days'),
                        '=',
                        variable_initializer(expression(
                            'expression'(
                              '(',
                              type('predefined_type'('double')),
                              ')',
                              expression(identifier('ticks'))
                            ),
                            'binary_operator'('overloadable_binary_operator'('/')),
                            expression(identifier('ticksperday'))
                          ))
                      )
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    'if',
                    '(',
                    expression(
                      'expression'(
                        '(',
                        type(predefined_type(integral_type('int'))),
                        ')',
                        expression(identifier('days'))
                      ),
                      'binary_operator'('overloadable_binary_operator'('!=')),
                      expression(literal('730905'))
                    ),
                    ')',
                    embedded_statement(
                      'return',
                      expression(literal('1')),
                      ';'
                    )
                  )),
                statement(embedded_statement(
                    'return',
                    expression(literal('0')),
                    ';'
                  )),
                '}'
              ))
          )),
        '}'
      ))))