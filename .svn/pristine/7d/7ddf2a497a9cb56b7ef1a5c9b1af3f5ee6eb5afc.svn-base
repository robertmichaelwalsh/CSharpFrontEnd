compilation_unit(
  namespace_member_declaration(type_declaration(interface_declaration(
        'modifier'('public'),
        'interface',
        identifier('IHelloWorldWriter'),
        '{',
        interface_member_declaration(
          type(predefined_type(integral_type('int'))),
          identifier('WriteIt'),
          '(',
          ')',
          ';'
        ),
        '}'
      ))),
  namespace_member_declaration(type_declaration(class_declaration(
        'modifier'('public'),
        'class',
        identifier('RealWriter'),
        class_base(
          ':',
          interface_type_list(qualified_identifier(identifier('IHelloWorldWriter')))
        ),
        '{',
        member_declaration(method_declaration(
            'modifier'('public'),
            type(predefined_type(integral_type('int'))),
            identifier('WriteIt'),
            '(',
            ')',
            body(block(
                '{',
                statement(embedded_statement(
                    'return',
                    expression(literal('33')),
                    ';'
                  )),
                '}'
              ))
          )),
        '}'
      ))),
  namespace_member_declaration(type_declaration(class_declaration(
        'modifier'('public'),
        'class',
        identifier('ProjectName'),
        '{',
        member_declaration(method_declaration(
            'modifier'('static'),
            type(predefined_type(integral_type('int'))),
            identifier('Main'),
            '(',
            ')',
            body(block(
                '{',
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('IHelloWorldWriter'))),
                      variable_declarator(
                        identifier('writer'),
                        '=',
                        variable_initializer(expression(
                            'new',
                            type(qualified_identifier(identifier('RealWriter'))),
                            '(',
                            ')'
                          ))
                      )
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    'if',
                    '(',
                    expression(
                      expression(
                        expression(
                          expression(identifier('writer')),
                          '.',
                          identifier('WriteIt')
                        ),
                        '(',
                        ')'
                      ),
                      'binary_operator'('overloadable_binary_operator'('!=')),
                      expression(literal('33'))
                    ),
                    ')',
                    embedded_statement(
                      'return',
                      expression(literal('1')),
                      ';'
                    )
                  )),
                statement(embedded_statement(
                    'return',
                    expression(literal('0')),
                    ';'
                  )),
                '}'
              ))
          )),
        '}'
      )))
)