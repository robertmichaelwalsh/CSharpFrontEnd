compilation_unit(
  using_directive(
    'using',
    identifier('System'),
    ';'
  ),
  namespace_member_declaration(namespace_declaration(
      'namespace',
      qualified_identifier(identifier('test')),
      '{',
      namespace_member_declaration(type_declaration(class_declaration(
            'modifier'('public'),
            'class',
            identifier('Test'),
            '{',
            member_declaration(method_declaration(
                'modifier'('public'),
                'modifier'('static'),
                type(predefined_type(integral_type('int'))),
                identifier('Main'),
                '(',
                formal_parameter_list(fixed_parameter(
                    type(array_type(
                        type('predefined_type'('string')),
                        rank_specifier(
                          '[',
                          ']'
                        )
                      )),
                    identifier('args')
                  )),
                ')',
                body(block(
                    '{',
                    statement(declaration_statement(
                        local_variable_declaration(
                          type(predefined_type(integral_type('int'))),
                          variable_declarator(
                            identifier('verbose'),
                            '=',
                            variable_initializer(expression(literal('0')))
                          )
                        ),
                        ';'
                      )),
                    statement(embedded_statement(
                        'if',
                        '(',
                        expression(
                          expression(
                            expression(
                              expression(identifier('args')),
                              '.',
                              identifier('Length')
                            ),
                            'binary_operator'('overloadable_binary_operator'('>')),
                            expression(literal('0'))
                          ),
                          'binary_operator'('&&'),
                          expression(
                            expression(
                              expression(identifier('args')),
                              '[',
                              expression_list(expression(literal('0'))),
                              ']'
                            ),
                            'binary_operator'('overloadable_binary_operator'('==')),
                            expression(literal('"-v"'))
                          )
                        ),
                        ')',
                        embedded_statement(
                          expression(
                            expression(identifier('verbose')),
                            'unary_assignment_operator'('++')
                          ),
                          ';'
                        )
                      )),
                    statement(embedded_statement(
                        'if',
                        '(',
                        expression(
                          expression(identifier('verbose')),
                          'binary_operator'('overloadable_binary_operator'('!=')),
                          expression(literal('0'))
                        ),
                        ')',
                        embedded_statement(
                          expression(
                            expression(
                              expression(identifier('Console')),
                              '.',
                              identifier('WriteLine')
                            ),
                            '(',
                            argument_list(argument(expression(
                                  expression(literal('"ValueType is valuetype: "')),
                                  'binary_operator'('overloadable_binary_operator'('+')),
                                  'expression'(
                                    'expression'(
                                      'expression'(
                                        'expression'(
                                          'typeof',
                                          '(',
                                          type(qualified_identifier(
                                              identifier('System'),
                                              '.',
                                              identifier('ValueType')
                                            )),
                                          ')'
                                        ),
                                        '.',
                                        identifier('IsValueType')
                                      ),
                                      '.',
                                      identifier('ToString')
                                    ),
                                    '(',
                                    ')'
                                  )
                                ))),
                            ')'
                          ),
                          ';'
                        )
                      )),
                    statement(embedded_statement(
                        'if',
                        '(',
                        expression(
                          'expression'(
                            'typeof',
                            '(',
                            type(qualified_identifier(
                                identifier('System'),
                                '.',
                                identifier('ValueType')
                              )),
                            ')'
                          ),
                          '.',
                          identifier('IsValueType')
                        ),
                        ')',
                        embedded_statement(
                          'return',
                          expression(literal('1')),
                          ';'
                        )
                      )),
                    statement(embedded_statement(
                        'if',
                        '(',
                        expression(
                          expression(identifier('verbose')),
                          'binary_operator'('overloadable_binary_operator'('!=')),
                          expression(literal('0'))
                        ),
                        ')',
                        embedded_statement(
                          expression(
                            expression(
                              expression(identifier('Console')),
                              '.',
                              identifier('WriteLine')
                            ),
                            '(',
                            argument_list(argument(expression(
                                  expression(literal('"Enum is valuetype: "')),
                                  'binary_operator'('overloadable_binary_operator'('+')),
                                  'expression'(
                                    'expression'(
                                      'expression'(
                                        'expression'(
                                          'typeof',
                                          '(',
                                          type(qualified_identifier(
                                              identifier('System'),
                                              '.',
                                              identifier('Enum')
                                            )),
                                          ')'
                                        ),
                                        '.',
                                        identifier('IsValueType')
                                      ),
                                      '.',
                                      identifier('ToString')
                                    ),
                                    '(',
                                    ')'
                                  )
                                ))),
                            ')'
                          ),
                          ';'
                        )
                      )),
                    statement(embedded_statement(
                        'if',
                        '(',
                        expression(
                          'expression'(
                            'typeof',
                            '(',
                            type(qualified_identifier(
                                identifier('System'),
                                '.',
                                identifier('Enum')
                              )),
                            ')'
                          ),
                          '.',
                          identifier('IsValueType')
                        ),
                        ')',
                        embedded_statement(
                          'return',
                          expression(literal('2')),
                          ';'
                        )
                      )),
                    statement(embedded_statement(
                        'if',
                        '(',
                        expression(
                          expression(identifier('verbose')),
                          'binary_operator'('overloadable_binary_operator'('!=')),
                          expression(literal('0'))
                        ),
                        ')',
                        embedded_statement(
                          expression(
                            expression(
                              expression(identifier('Console')),
                              '.',
                              identifier('WriteLine')
                            ),
                            '(',
                            argument_list(argument(expression(
                                  expression(literal('"TypeAttributes is valuetype: "')),
                                  'binary_operator'('overloadable_binary_operator'('+')),
                                  'expression'(
                                    'expression'(
                                      'expression'(
                                        'expression'(
                                          'typeof',
                                          '(',
                                          type(qualified_identifier(
                                              identifier('System'),
                                              '.',
                                              identifier('Reflection'),
                                              '.',
                                              identifier('TypeAttributes')
                                            )),
                                          ')'
                                        ),
                                        '.',
                                        identifier('IsValueType')
                                      ),
                                      '.',
                                      identifier('ToString')
                                    ),
                                    '(',
                                    ')'
                                  )
                                ))),
                            ')'
                          ),
                          ';'
                        )
                      )),
                    statement(embedded_statement(
                        'if',
                        '(',
                        expression(
                          'unary_operator'('!'),
                          'expression'(
                            'expression'(
                              'typeof',
                              '(',
                              type(qualified_identifier(
                                  identifier('System'),
                                  '.',
                                  identifier('Reflection'),
                                  '.',
                                  identifier('TypeAttributes')
                                )),
                              ')'
                            ),
                            '.',
                            identifier('IsValueType')
                          )
                        ),
                        ')',
                        embedded_statement(
                          'return',
                          expression(literal('3')),
                          ';'
                        )
                      )),
                    statement(embedded_statement(
                        'if',
                        '(',
                        expression(
                          expression(identifier('verbose')),
                          'binary_operator'('overloadable_binary_operator'('!=')),
                          expression(literal('0'))
                        ),
                        ')',
                        embedded_statement(
                          expression(
                            expression(
                              expression(identifier('Console')),
                              '.',
                              identifier('WriteLine')
                            ),
                            '(',
                            argument_list(argument(expression(
                                  expression(literal('"TypeAttributes is enum: "')),
                                  'binary_operator'('overloadable_binary_operator'('+')),
                                  'expression'(
                                    'expression'(
                                      'expression'(
                                        'expression'(
                                          'typeof',
                                          '(',
                                          type(qualified_identifier(
                                              identifier('System'),
                                              '.',
                                              identifier('Reflection'),
                                              '.',
                                              identifier('TypeAttributes')
                                            )),
                                          ')'
                                        ),
                                        '.',
                                        identifier('IsEnum')
                                      ),
                                      '.',
                                      identifier('ToString')
                                    ),
                                    '(',
                                    ')'
                                  )
                                ))),
                            ')'
                          ),
                          ';'
                        )
                      )),
                    statement(embedded_statement(
                        'if',
                        '(',
                        expression(
                          'unary_operator'('!'),
                          'expression'(
                            'expression'(
                              'typeof',
                              '(',
                              type(qualified_identifier(
                                  identifier('System'),
                                  '.',
                                  identifier('Reflection'),
                                  '.',
                                  identifier('TypeAttributes')
                                )),
                              ')'
                            ),
                            '.',
                            identifier('IsEnum')
                          )
                        ),
                        ')',
                        embedded_statement(
                          'return',
                          expression(literal('4')),
                          ';'
                        )
                      )),
                    statement(embedded_statement(
                        'if',
                        '(',
                        expression(
                          expression(identifier('verbose')),
                          'binary_operator'('overloadable_binary_operator'('!=')),
                          expression(literal('0'))
                        ),
                        ')',
                        embedded_statement(
                          expression(
                            expression(
                              expression(identifier('Console')),
                              '.',
                              identifier('WriteLine')
                            ),
                            '(',
                            argument_list(argument(expression(
                                  expression(literal('"Enum is enum: "')),
                                  'binary_operator'('overloadable_binary_operator'('+')),
                                  'expression'(
                                    'expression'(
                                      'expression'(
                                        'expression'(
                                          'typeof',
                                          '(',
                                          type(qualified_identifier(
                                              identifier('System'),
                                              '.',
                                              identifier('Enum')
                                            )),
                                          ')'
                                        ),
                                        '.',
                                        identifier('IsEnum')
                                      ),
                                      '.',
                                      identifier('ToString')
                                    ),
                                    '(',
                                    ')'
                                  )
                                ))),
                            ')'
                          ),
                          ';'
                        )
                      )),
                    statement(embedded_statement(
                        'if',
                        '(',
                        expression(
                          'expression'(
                            'typeof',
                            '(',
                            type(qualified_identifier(
                                identifier('System'),
                                '.',
                                identifier('Enum')
                              )),
                            ')'
                          ),
                          '.',
                          identifier('IsEnum')
                        ),
                        ')',
                        embedded_statement(
                          'return',
                          expression(literal('5')),
                          ';'
                        )
                      )),
                    statement(embedded_statement(
                        'if',
                        '(',
                        expression(
                          expression(identifier('verbose')),
                          'binary_operator'('overloadable_binary_operator'('!=')),
                          expression(literal('0'))
                        ),
                        ')',
                        embedded_statement(
                          expression(
                            expression(
                              expression(identifier('Console')),
                              '.',
                              identifier('WriteLine')
                            ),
                            '(',
                            argument_list(argument(expression(
                                  expression(literal('"Int32 is valuetype: "')),
                                  'binary_operator'('overloadable_binary_operator'('+')),
                                  'expression'(
                                    'expression'(
                                      'expression'(
                                        'expression'(
                                          'typeof',
                                          '(',
                                          type(qualified_identifier(
                                              identifier('System'),
                                              '.',
                                              identifier('Int32')
                                            )),
                                          ')'
                                        ),
                                        '.',
                                        identifier('IsValueType')
                                      ),
                                      '.',
                                      identifier('ToString')
                                    ),
                                    '(',
                                    ')'
                                  )
                                ))),
                            ')'
                          ),
                          ';'
                        )
                      )),
                    statement(embedded_statement(
                        'if',
                        '(',
                        expression(
                          'unary_operator'('!'),
                          'expression'(
                            'expression'(
                              'typeof',
                              '(',
                              type(qualified_identifier(
                                  identifier('System'),
                                  '.',
                                  identifier('Int32')
                                )),
                              ')'
                            ),
                            '.',
                            identifier('IsValueType')
                          )
                        ),
                        ')',
                        embedded_statement(
                          'return',
                          expression(literal('6')),
                          ';'
                        )
                      )),
                    statement(embedded_statement(
                        'return',
                        expression(literal('0')),
                        ';'
                      )),
                    '}'
                  ))
              )),
            '}'
          ))),
      '}'
    ))
)