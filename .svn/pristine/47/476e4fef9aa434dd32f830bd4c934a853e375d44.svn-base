compilation_unit(
  using_directive(
    'using',
    identifier('System'),
    ';'
  ),
  using_directive(
    'using',
    identifier('System'),
    '.',
    identifier('Net'),
    ';'
  ),
  namespace_member_declaration(type_declaration(class_declaration(
        'modifier'('public'),
        'class',
        identifier('A'),
        class_base(
          ':',
          interface_type_list(qualified_identifier(identifier('MarshalByRefObject')))
        ),
        '{',
        member_declaration(method_declaration(
            'modifier'('public'),
            'type'('void'),
            identifier('test'),
            '(',
            ')',
            body(block(
                '{',
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('Dns')),
                        '.',
                        identifier('GetHostByName')
                      ),
                      '(',
                      argument_list(argument(expression(literal('"localhost"')))),
                      ')'
                    ),
                    ';'
                  )),
                '}'
              ))
          )),
        member_declaration(method_declaration(
            'modifier'('public'),
            'modifier'('static'),
            'type'('void'),
            identifier('Main'),
            '(',
            ')',
            body(block(
                '{',
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('Console')),
                        '.',
                        identifier('WriteLine')
                      ),
                      '(',
                      argument_list(argument(expression(literal('"aaa"')))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('Dns')),
                        '.',
                        identifier('GetHostByName')
                      ),
                      '(',
                      argument_list(argument(expression(literal('"localhost"')))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('Console')),
                        '.',
                        identifier('WriteLine')
                      ),
                      '(',
                      argument_list(argument(expression(literal('"bbb"')))),
                      ')'
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('AppDomain'))),
                      variable_declarator(
                        identifier('domain'),
                        '=',
                        variable_initializer(expression(
                            expression(
                              expression(identifier('AppDomain')),
                              '.',
                              identifier('CreateDomain')
                            ),
                            '(',
                            argument_list(argument(expression(literal('"aaa"')))),
                            ')'
                          ))
                      )
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('A'))),
                      variable_declarator(
                        identifier('a'),
                        '=',
                        variable_initializer(expression(
                            '(',
                            type(qualified_identifier(identifier('A'))),
                            ')',
                            expression(
                              expression(
                                expression(identifier('domain')),
                                '.',
                                identifier('CreateInstanceAndUnwrap')
                              ),
                              '(',
                              argument_list(
                                argument(expression(
                                    'expression'(
                                      'expression'(
                                        'typeof',
                                        '(',
                                        type(qualified_identifier(identifier('A'))),
                                        ')'
                                      ),
                                      '.',
                                      identifier('Assembly')
                                    ),
                                    '.',
                                    identifier('FullName')
                                  )),
                                ',',
                                argument(expression(
                                    'expression'(
                                      'typeof',
                                      '(',
                                      type(qualified_identifier(identifier('A'))),
                                      ')'
                                    ),
                                    '.',
                                    identifier('FullName')
                                  ))
                              ),
                              ')'
                            )
                          ))
                      )
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('a')),
                        '.',
                        identifier('test')
                      ),
                      '(',
                      ')'
                    ),
                    ';'
                  )),
                '}'
              ))
          )),
        '}'
      )))
)