compilation_unit(
  using_directive(
    'using',
    identifier('System'),
    ';'
  ),
  using_directive(
    'using',
    identifier('System'),
    '.',
    identifier('Reflection'),
    ';'
  ),
  using_directive(
    'using',
    identifier('System'),
    '.',
    identifier('Reflection'),
    '.',
    identifier('Emit'),
    ';'
  ),
  namespace_member_declaration(type_declaration(class_declaration(
        'class',
        identifier('CGen'),
        '{',
        member_declaration(method_declaration(
            'modifier'('public'),
            'modifier'('static'),
            type(predefined_type(integral_type('int'))),
            identifier('Main'),
            '(',
            ')',
            body(block(
                '{',
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('AssemblyBuilder'))),
                      variable_declarator(identifier('abuilder'))
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('ModuleBuilder'))),
                      variable_declarator(identifier('mbuilder'))
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('TypeBuilder'))),
                      variable_declarator(identifier('tbuilder')),
                      ',',
                      variable_declarator(identifier('tb2'))
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('FieldBuilder'))),
                      variable_declarator(identifier('fbuilder'))
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('PropertyBuilder'))),
                      variable_declarator(identifier('pbuilder'))
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('ILGenerator'))),
                      variable_declarator(identifier('ilg'))
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('AssemblyName'))),
                      variable_declarator(identifier('an'))
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('String'))),
                      variable_declarator(
                        identifier('name'),
                        '=',
                        variable_initializer(expression(literal('"tcgen.exe"')))
                      )
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('MethodBuilder'))),
                      variable_declarator(identifier('get_method')),
                      ',',
                      variable_declarator(identifier('entryp'))
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('TypeAttributes'))),
                      variable_declarator(
                        identifier('attrs'),
                        '=',
                        variable_initializer(expression(
                            expression(
                              expression(identifier('TypeAttributes')),
                              '.',
                              identifier('Public')
                            ),
                            '|',
                            expression(
                              expression(identifier('TypeAttributes')),
                              '.',
                              identifier('Class')
                            )
                          ))
                      )
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('MethodAttributes'))),
                      variable_declarator(
                        identifier('mattrs'),
                        '=',
                        variable_initializer(expression(
                            expression(
                              expression(identifier('MethodAttributes')),
                              '.',
                              identifier('Public')
                            ),
                            '|',
                            expression(
                              expression(identifier('MethodAttributes')),
                              '.',
                              identifier('Static')
                            )
                          ))
                      )
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(identifier('an')),
                      assignment_operator('='),
                      expression(
                        'new',
                        type(qualified_identifier(identifier('AssemblyName'))),
                        '(',
                        ')'
                      )
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('an')),
                        '.',
                        identifier('Name')
                      ),
                      assignment_operator('='),
                      expression(identifier('name'))
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(identifier('abuilder')),
                      assignment_operator('='),
                      expression(
                        expression(
                          expression(
                            expression(identifier('AppDomain')),
                            '.',
                            identifier('CurrentDomain')
                          ),
                          '.',
                          identifier('DefineDynamicAssembly')
                        ),
                        '(',
                        argument_list(
                          argument(expression(identifier('an'))),
                          ',',
                          argument(expression(
                              expression(identifier('AssemblyBuilderAccess')),
                              '.',
                              identifier('Save')
                            ))
                        ),
                        ')'
                      )
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(identifier('mbuilder')),
                      assignment_operator('='),
                      expression(
                        expression(
                          expression(identifier('abuilder')),
                          '.',
                          identifier('DefineDynamicModule')
                        ),
                        '(',
                        argument_list(
                          argument(expression(identifier('name'))),
                          ',',
                          argument(expression(identifier('name')))
                        ),
                        ')'
                      )
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(identifier('tbuilder')),
                      assignment_operator('='),
                      expression(
                        expression(
                          expression(identifier('mbuilder')),
                          '.',
                          identifier('DefineType')
                        ),
                        '(',
                        argument_list(
                          argument(expression(literal('"Test.CodeGen"'))),
                          ',',
                          argument(expression(identifier('attrs')))
                        ),
                        ')'
                      )
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('Type'))),
                      variable_declarator(
                        identifier('result'),
                        '=',
                        variable_initializer(expression(
                            'typeof',
                            '(',
                            type(predefined_type(integral_type('int'))),
                            ')'
                          ))
                      )
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(array_type(
                          type(qualified_identifier(identifier('Type'))),
                          rank_specifier(
                            '[',
                            ']'
                          )
                        )),
                      variable_declarator(
                        identifier('param'),
                        '=',
                        variable_initializer(expression(
                            'new',
                            array_type(
                              type(qualified_identifier(identifier('Type'))),
                              rank_specifier(
                                '[',
                                ']'
                              )
                            ),
                            array_initializer(
                              '{',
                              variable_initializer_list(variable_initializer(expression(
                                    'typeof',
                                    '(',
                                    type(array_type(
                                        type(qualified_identifier(identifier('String'))),
                                        rank_specifier(
                                          '[',
                                          ']'
                                        )
                                      )),
                                    ')'
                                  ))),
                              '}'
                            )
                          ))
                      )
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(identifier('entryp')),
                      assignment_operator('='),
                      expression(
                        expression(
                          expression(identifier('tbuilder')),
                          '.',
                          identifier('DefineMethod')
                        ),
                        '(',
                        argument_list(
                          argument(expression(literal('"Main"'))),
                          ',',
                          argument(expression(identifier('mattrs'))),
                          ',',
                          argument(expression(identifier('result'))),
                          ',',
                          argument(expression(identifier('param')))
                        ),
                        ')'
                      )
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(identifier('ilg')),
                      assignment_operator('='),
                      expression(
                        expression(
                          expression(identifier('entryp')),
                          '.',
                          identifier('GetILGenerator')
                        ),
                        '(',
                        argument_list(argument(expression(literal('128')))),
                        ')'
                      )
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('ilg')),
                        '.',
                        identifier('DeclareLocal')
                      ),
                      '(',
                      argument_list(argument(expression(
                            'typeof',
                            '(',
                            type(predefined_type(integral_type('int'))),
                            ')'
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('Label'))),
                      variable_declarator(
                        identifier('fail'),
                        '=',
                        variable_initializer(expression(
                            expression(
                              expression(identifier('ilg')),
                              '.',
                              identifier('DefineLabel')
                            ),
                            '(',
                            ')'
                          ))
                      )
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('ilg')),
                        '.',
                        identifier('Emit')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(identifier('OpCodes')),
                            '.',
                            identifier('Ldc_I4_2')
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('ilg')),
                        '.',
                        identifier('Emit')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(identifier('OpCodes')),
                            '.',
                            identifier('Dup')
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('ilg')),
                        '.',
                        identifier('Emit')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(identifier('OpCodes')),
                            '.',
                            identifier('Add')
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('ilg')),
                        '.',
                        identifier('Emit')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(identifier('OpCodes')),
                            '.',
                            identifier('Stloc_0')
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('ilg')),
                        '.',
                        identifier('Emit')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(identifier('OpCodes')),
                            '.',
                            identifier('Ldc_I4_4')
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('ilg')),
                        '.',
                        identifier('Emit')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(identifier('OpCodes')),
                            '.',
                            identifier('Ldloc_0')
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('ilg')),
                        '.',
                        identifier('Emit')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(identifier('OpCodes')),
                            '.',
                            identifier('Sub')
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('ilg')),
                        '.',
                        identifier('Emit')
                      ),
                      '(',
                      argument_list(
                        argument(expression(
                            expression(identifier('OpCodes')),
                            '.',
                            identifier('Brfalse')
                          )),
                        ',',
                        argument(expression(identifier('fail')))
                      ),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('ilg')),
                        '.',
                        identifier('Emit')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(identifier('OpCodes')),
                            '.',
                            identifier('Ldc_I4_1')
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('ilg')),
                        '.',
                        identifier('Emit')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(identifier('OpCodes')),
                            '.',
                            identifier('Ret')
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('ilg')),
                        '.',
                        identifier('MarkLabel')
                      ),
                      '(',
                      argument_list(argument(expression(identifier('fail')))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('ilg')),
                        '.',
                        identifier('Emit')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(identifier('OpCodes')),
                            '.',
                            identifier('Ldc_I4_0')
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('ilg')),
                        '.',
                        identifier('Emit')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(identifier('OpCodes')),
                            '.',
                            identifier('Ret')
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(identifier('fbuilder')),
                      assignment_operator('='),
                      expression(
                        expression(
                          expression(identifier('tbuilder')),
                          '.',
                          identifier('DefineField')
                        ),
                        '(',
                        argument_list(
                          argument(expression(literal('"int_field"'))),
                          ',',
                          argument(expression(
                              'typeof',
                              '(',
                              type(predefined_type(integral_type('int'))),
                              ')'
                            )),
                          ',',
                          argument(expression(
                              expression(identifier('FieldAttributes')),
                              '.',
                              identifier('Private')
                            ))
                        ),
                        ')'
                      )
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(identifier('pbuilder')),
                      assignment_operator('='),
                      expression(
                        expression(
                          expression(identifier('tbuilder')),
                          '.',
                          identifier('DefineProperty')
                        ),
                        '(',
                        argument_list(
                          argument(expression(literal('"FieldI"'))),
                          ',',
                          argument(expression(
                              expression(identifier('PropertyAttributes')),
                              '.',
                              identifier('None')
                            )),
                          ',',
                          argument(expression(
                              'typeof',
                              '(',
                              type(predefined_type(integral_type('int'))),
                              ')'
                            )),
                          ',',
                          argument(expression(literal('null')))
                        ),
                        ')'
                      )
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(identifier('get_method')),
                      assignment_operator('='),
                      expression(
                        expression(
                          expression(identifier('tbuilder')),
                          '.',
                          identifier('DefineMethod')
                        ),
                        '(',
                        argument_list(
                          argument(expression(literal('"get_FieldI"'))),
                          ',',
                          argument(expression(
                              expression(identifier('MethodAttributes')),
                              '.',
                              identifier('Public')
                            )),
                          ',',
                          argument(expression(identifier('result'))),
                          ',',
                          argument(expression(literal('null')))
                        ),
                        ')'
                      )
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(identifier('ilg')),
                      assignment_operator('='),
                      expression(
                        expression(
                          expression(identifier('get_method')),
                          '.',
                          identifier('GetILGenerator')
                        ),
                        '(',
                        argument_list(argument(expression(literal('128')))),
                        ')'
                      )
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('ilg')),
                        '.',
                        identifier('Emit')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(identifier('OpCodes')),
                            '.',
                            identifier('Ldloc_0')
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('ilg')),
                        '.',
                        identifier('Emit')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(identifier('OpCodes')),
                            '.',
                            identifier('Ldloc_0')
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('ilg')),
                        '.',
                        identifier('Emit')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(identifier('OpCodes')),
                            '.',
                            identifier('Ceq')
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('ilg')),
                        '.',
                        identifier('Emit')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(identifier('OpCodes')),
                            '.',
                            identifier('Ret')
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('pbuilder')),
                        '.',
                        identifier('SetGetMethod')
                      ),
                      '(',
                      argument_list(argument(expression(identifier('get_method')))),
                      ')'
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('Type'))),
                      variable_declarator(
                        identifier('t'),
                        '=',
                        variable_initializer(expression(
                            expression(
                              expression(identifier('tbuilder')),
                              '.',
                              identifier('CreateType')
                            ),
                            '(',
                            ')'
                          ))
                      )
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('abuilder')),
                        '.',
                        identifier('SetEntryPoint')
                      ),
                      '(',
                      argument_list(argument(expression(identifier('entryp')))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('abuilder')),
                        '.',
                        identifier('Save')
                      ),
                      '(',
                      argument_list(argument(expression(identifier('name')))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    'return',
                    expression(literal('0')),
                    ';'
                  )),
                '}'
              ))
          )),
        '}'
      )))
)