compilation_unit(
  using_directive(
    'using',
    identifier('System'),
    ';'
  ),
  using_directive(
    'using',
    identifier('System'),
    '.',
    identifier('Threading'),
    ';'
  ),
  using_directive(
    'using',
    identifier('System'),
    '.',
    identifier('Runtime'),
    '.',
    identifier('InteropServices'),
    ';'
  ),
  namespace_member_declaration(type_declaration(class_declaration(
        'class',
        identifier('foo'),
        '{',
        member_declaration(type_declaration(delegate_declaration(
              'delegate',
              'type'('void'),
              identifier('foo_delegate'),
              '(',
              ')',
              ';'
            ))),
        member_declaration(method_declaration(
            'modifier'('static'),
            'type'('void'),
            identifier('function'),
            '(',
            ')',
            body(block(
                '{',
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('Console')),
                        '.',
                        identifier('WriteLine')
                      ),
                      '(',
                      argument_list(argument(expression(literal('"Delegate method"')))),
                      ')'
                    ),
                    ';'
                  )),
                '}'
              ))
          )),
        member_declaration(method_declaration(
            'modifier'('static'),
            'type'('void'),
            identifier('async_callback'),
            '(',
            formal_parameter_list(fixed_parameter(
                type(qualified_identifier(identifier('IAsyncResult'))),
                identifier('ar')
              )),
            ')',
            body(block(
                '{',
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('Console')),
                        '.',
                        identifier('WriteLine')
                      ),
                      '(',
                      argument_list(argument(expression(
                            expression(literal('"Async callback "')),
                            'binary_operator'('overloadable_binary_operator'('+')),
                            expression(
                              expression(identifier('ar')),
                              '.',
                              identifier('AsyncState')
                            )
                          ))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    'throw',
                    expression(
                      'new',
                      type(qualified_identifier(identifier('SystemException'))),
                      '(',
                      argument_list(argument(expression(literal('"Async throws exception"')))),
                      ')'
                    ),
                    ';'
                  )),
                '}'
              ))
          )),
        member_declaration(method_declaration(
            'modifier'('public'),
            'modifier'('static'),
            'type'('void'),
            identifier('Main'),
            '(',
            ')',
            body(block(
                '{',
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('foo_delegate'))),
                      variable_declarator(
                        identifier('d'),
                        '=',
                        variable_initializer(expression(
                            'new',
                            type(qualified_identifier(identifier('foo_delegate'))),
                            '(',
                            argument_list(argument(expression(identifier('function')))),
                            ')'
                          ))
                      )
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('AsyncCallback'))),
                      variable_declarator(
                        identifier('ac'),
                        '=',
                        variable_initializer(expression(
                            'new',
                            type(qualified_identifier(identifier('AsyncCallback'))),
                            '(',
                            argument_list(argument(expression(identifier('async_callback')))),
                            ')'
                          ))
                      )
                    ),
                    ';'
                  )),
                statement(declaration_statement(
                    local_variable_declaration(
                      type(qualified_identifier(identifier('IAsyncResult'))),
                      variable_declarator(
                        identifier('ar1'),
                        '=',
                        variable_initializer(expression(
                            expression(
                              expression(identifier('d')),
                              '.',
                              identifier('BeginInvoke')
                            ),
                            '(',
                            argument_list(
                              argument(expression(identifier('ac'))),
                              ',',
                              argument(expression(literal('"foo"')))
                            ),
                            ')'
                          ))
                      )
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(
                          expression(identifier('ar1')),
                          '.',
                          identifier('AsyncWaitHandle')
                        ),
                        '.',
                        identifier('WaitOne')
                      ),
                      '(',
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('d')),
                        '.',
                        identifier('EndInvoke')
                      ),
                      '(',
                      argument_list(argument(expression(identifier('ar1')))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('Thread')),
                        '.',
                        identifier('Sleep')
                      ),
                      '(',
                      argument_list(argument(expression(literal('1000')))),
                      ')'
                    ),
                    ';'
                  )),
                statement(embedded_statement(
                    expression(
                      expression(
                        expression(identifier('Console')),
                        '.',
                        identifier('WriteLine')
                      ),
                      '(',
                      argument_list(argument(expression(literal('"Main returns"')))),
                      ')'
                    ),
                    ';'
                  )),
                '}'
              ))
          )),
        '}'
      )))
)